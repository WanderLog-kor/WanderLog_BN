spring.application.name=project

server.port = 443
server.ssl.key-store = classpath:ssl/keystore.p12
server.ssl.key-store-type = PKCS12
server.ssl.key-store-password = MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgwqG78tY5PFLJhrGAJdvjpQy3TrqX3iLF47i1jLe9aamhRANCAAQy/YYOWlHLhywxI2yquY88Rl6lzmOe1SpeeLELh47nKca5TDkZQle8ej4YegtaRMFDqAaeZFy1aUU1hyuKsd1/

#jpa
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=none


#logging.level.org.hibernate = info

spring.datasource.hikari.registerMbeans=true


# profileimg
logging.level.root=INFO
logging.level.com.tripPlanner=INFO
spring.web.resources.static-locations=file:///C:/upload/profile/



#MariaDB
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

spring.datasource.url=jdbc:mariadb://43.200.0.63:3306/tripplanner?useUnicode=true&characterEncoding=utf8mb4&characterSetResults=utf8mb4

spring.datasource.username=tripplanner
spring.datasource.password=projectteam1

# Redis
spring.redis.data.host=localhost
spring.redis.data.port=6379
spring.redis.data.timeout=6000
spring.redis.data.password=1234

#JWT Secret Key
jwt.secret = MWM1NThjMTktY2VlNC00NzdiLTlmZDAtMzlkODAwYWI5MzcyDQo=
jwt.access-token-expiration = 3600000
jwt.refresh-token-expiration = 172800000



#Oauth2
#Google
spring.security.oauth2.client.registration.google.client-id=7#
spring.security.oauth2.client.registration.google.client-secret=#
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:9000/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email

#Naver
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.client-id=b51H1Inw36byjYNoUfEu
spring.security.oauth2.client.registration.naver.client-secret=ljzJh8ZO6Y
spring.security.oauth2.client.registration.naver.scope=name,email,gender,nickname
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:9000/login/oauth2/code/naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response
#
#Kakao
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.client-id=#
spring.security.oauth2.client.registration.kakao.client-secret=#
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email,profile_image
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:9000/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

#Instagram
#spring.security.oauth2.client.registration.instagram.client-id=#
#spring.security.oauth2.client.registration.instagram.client-secret=#
#spring.security.oauth2.client.registration.instagram.scope=user_profile,user_media
#spring.security.oauth2.client.registration.instagram.redirect-uri=http://localhost:9000/login/oauth2/code/instagram

#spring.security.oauth2.client.provider.instagram.authorization-uri=https://api.instagram.com/oauth/authorize
#spring.security.oauth2.client.provider.instagram.token-uri=https://api.instagram.com/oauth/access_token
#spring.security.oauth2.client.provider.instagram.user-info-uri=https://graph.instagram.com/me?fields=id,username
#spring.security.oauth2.client.provider.instagram.user-name-attribute=id

server.servlet.session.cookie.name=MY_SESSION

api.service.key=x6SfSA5ldZux8KHls%2FFIRkHLFn6ya4RD8Q2A4idhYKbH2QliBZVE7WRMZ5KoR6toZ7Qz0Ugxr3%2Bt0g5iR%2FJ9hg%3D%3D
api.service.key2=f57%2FvzD0xikhY%2BT%2FUp%2BhJY6yczlZKsLfk6F3HJXBuefh4KUKuEtmV0kc%2Bcf7shvdxz0s%2FHYIvbO6yHn1NVJ7EA%3D%3D
google.api.key=AIzaSyAEae5uopEekuKilPCwWMsQS-M5JG8tTIk
google.api.key2=AIzaSyAh2SEeh6p2plnuloWrKz9HtSw7pTfu8PM

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=wlscksals@gmail.com
spring.mail.password=bdlemgffjgzpgpug
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

spring.mail.properties.mail.debug=true
